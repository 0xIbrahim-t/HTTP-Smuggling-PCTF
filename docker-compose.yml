version: '3.8'

services:
  webserver:
    build: ./apache
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./apache/certs:/etc/apache2/certs
      - ./apache/cache:/var/cache/apache2
    depends_on:
      - frontend
      - backend
    networks:
      - ctf_network

  frontend:
    build: ./frontend
    environment:
      - NODE_ENV=production
    networks:
      - ctf_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build: ./backend
    environment:
      - FLASK_APP=wsgi.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://ctfuser:ctfpass@db:5432/ctfdb
      - JWT_SECRET=super_secret_key_123
      - SERVICE_AUTH_SECRET=very_secret_key_456
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ctf_network

  admin-bot:
    build: ./admin-bot
    environment:
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - BASE_URL=http://webserver
      - PYTHONUNBUFFERED=1
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - ctf_network

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=ctfuser
      - POSTGRES_PASSWORD=ctfpass
      - POSTGRES_DB=ctfdb
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    networks:
      - ctf_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ctfuser -d ctfdb"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  ctf_network:
    driver: bridge

volumes:
  pgdata: