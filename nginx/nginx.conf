events {
    worker_connections 1024;
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # HTTP/2 Configuration
    http2_max_field_size 16k;
    http2_max_header_size 32k;
    http2_idle_timeout 3m;

    # Caching Configuration
    proxy_cache_path /var/cache/nginx/cache 
                    levels=1:2 
                    keys_zone=my_cache:10m 
                    max_size=10g 
                    inactive=60m 
                    use_temp_path=off;

    # Upstream Definitions
    upstream frontend {
        server frontend:3000;
        keepalive 32;
    }

    upstream backend {
        server backend:8000;
        keepalive 32;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    # Main HTTPS Server
    server {
        listen 443 ssl http2;
        server_name localhost;

        # SSL Configuration
        ssl_certificate /etc/nginx/cert/cert.pem;
        ssl_certificate_key /etc/nginx/cert/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # Frontend Location
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Static content caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                proxy_cache my_cache;
                proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
                proxy_cache_valid 200 60m;
                add_header X-Cache-Status $upstream_cache_status;
                expires 1h;
                add_header Cache-Control "public, no-transform";
            }
        }

        # Backend API Location - Intentionally Vulnerable Configuration
        location /api {
            # Force HTTP/1.1 for backend communication
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Vulnerability 1: Allow Transfer-Encoding header passthrough
            proxy_pass_request_headers on;

            # Vulnerability 2: Predictable cache key with user-controlled component
            proxy_cache my_cache;
            proxy_cache_key "$request_method$request_uri$http_x_frontend_version";
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 10m;

            # Vulnerability 3: Cache can be poisoned due to misconfiguration
            proxy_cache_bypass $http_authorization;
            proxy_no_cache $http_authorization;
            
            # Actual backend proxy pass
            proxy_pass http://backend;

            # Remove some headers to prevent cache bypass
            proxy_hide_header Cache-Control;
            proxy_hide_header Pragma;

            # Add cache status header
            add_header X-Cache-Status $upstream_cache_status;

            # Don't buffer large requests to allow smuggling
            proxy_request_buffering off;
        }

        # Additional security for admin endpoints
        location /api/admin {
            # All requests to admin endpoints still go through vulnerable proxy
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_pass_request_headers on;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
}