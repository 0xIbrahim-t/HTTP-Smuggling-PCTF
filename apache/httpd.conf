# /apache/httpd.conf
# Main Apache configuration file

# Load required modules
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule http2_module modules/mod_http2.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule proxy_http2_module modules/mod_proxy_http2.so
LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
LoadModule cache_module modules/mod_cache.so
LoadModule cache_disk_module modules/mod_cache_disk.so
LoadModule headers_module modules/mod_headers.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule lua_module modules/mod_lua.so
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
LoadModule env_module modules/mod_env.so

# Global configuration
ServerRoot "/etc/apache2"
Define APACHE_LOG_ROOT "/var/log/apache2"

# Listen on both HTTP and HTTPS ports
Listen 80
Listen 443

# MPM configuration for HTTP/2
<IfModule mpm_event_module>
    StartServers             3
    MinSpareThreads         75
    MaxSpareThreads        250
    ThreadLimit            64
    ThreadsPerChild        25
    MaxRequestWorkers     400
    MaxConnectionsPerChild   0
    LimitRequestFieldSize 16384
    LimitRequestFields 100
</IfModule>

# SSL Global Settings
SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
SSLHonorCipherOrder on
SSLSessionTickets off
SSLSessionCache shmcb:/var/run/apache2/ssl_scache(512000)

# Enable HTTP/2
Protocols h2 http/1.1
H2Push          on
H2PushPriority  *                       after
H2PushPriority  text/css               before
H2PushPriority  image/jpeg             after   32
H2PushPriority  image/png              after   32

# HTTP to HTTPS redirect VirtualHost
<VirtualHost *:80>
    ServerName ${SERVER_NAME}
    Redirect permanent / https://${SERVER_NAME}/
    ErrorLog ${APACHE_LOG_ROOT}/error.log
    CustomLog ${APACHE_LOG_ROOT}/access.log combined
</VirtualHost>

# Main HTTPS VirtualHost
<VirtualHost *:443>
    ServerAdmin webmaster@localhost
    ServerName ${SERVER_NAME}
    DocumentRoot /var/www/html
    ErrorLog ${APACHE_LOG_ROOT}/error.log
    CustomLog ${APACHE_LOG_ROOT}/access.log combined
    LogLevel debug

    # SSL Configuration
    SSLEngine on
    SSLCertificateFile      /etc/apache2/certs/apache.crt
    SSLCertificateKeyFile   /etc/apache2/certs/apache.key
    SSLProtocol             -all +TLSv1.2 +TLSv1.3

    # Enable HTTP/2 for this vhost
    Protocols h2 http/1.1
    
    # CORS Headers
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header always set Access-Control-Allow-Headers "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"

    # Proxy Configuration
    ProxyRequests Off
    ProxyPreserveHost On
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "443"

    # Frontend Proxy
    ProxyPass / http://frontend:3000/ enablereuse=on timeout=300 retry=1 acquire=3000 connectiontimeout=300
    ProxyPassReverse / http://frontend:3000/
    
    # WebSocket support
    ProxyPass /ws ws://frontend:3000/ws
    ProxyPassReverse /ws ws://frontend:3000/ws

    # Backend API Proxy (HTTP/1.1)
    ProxyPass /api/ http://backend:5000/api/ enablereuse=on timeout=300 retry=1
    ProxyPassReverse /api/ http://backend:5000/api/

    # Cache configuration
    CacheRoot /var/cache/apache2
    CacheEnable disk /
    CacheDefaultExpire 60
    CacheDirLevels 2
    CacheDirLength 1
    CacheMaxFileSize 1000000000  # 1GB
    
    # Custom Lua script for cache control
    LuaHookCheckCache /etc/apache2/cache_control.lua check_cache_access

    # Vulnerability configurations
    # 1. HTTP Request Smuggling enablement
    SetEnv proxy-sendchunked 1
    SetEnv proxy-sendcl 1
    HttpProtocolOptions Unsafe

    # 2. Cache Poisoning enablement
    Header add X-Cache-Key "%{REQUEST_URI}e:%{HTTP:X-Special-Key}e"
    
    # 3. Admin token verification and cache handling
    SetEnvIf Authorization "Bearer.*role.*admin.*" ADMIN_USER=1
    SetEnvIf X-Special-Key "secret_cache_key" ENABLE_CACHE=1

    # Rewrite rules for admin cache handling
    RewriteEngine On
    RewriteCond %{ENV:ADMIN_USER} =1
    RewriteCond %{ENV:ENABLE_CACHE} =1
    RewriteRule .* - [E=SHOW_CACHE:1]
</VirtualHost>