# /etc/apache2/sites-available/000-default.conf

# Load required modules
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule proxy_http2_module modules/mod_proxy_http2.so
LoadModule http2_module modules/mod_http2.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule cache_module modules/mod_cache.so
LoadModule cache_disk_module modules/mod_cache_disk.so
LoadModule headers_module modules/mod_headers.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule env_module modules/mod_env.so
LoadModule lua_module modules/mod_lua.so

# Global settings
ServerName localhost
Protocols h2 http/1.1

# Cache settings
CacheRoot /var/cache/apache2
CacheDirLevels 2
CacheDirLength 1
CacheDefaultExpire 60
CacheQuickHandler off
CacheIgnoreHeaders Set-Cookie
CacheHeader on

# Custom header checks for cache poisoning
SetEnvIf X-Special-Key "^special-cache-key-123$" CACHE_ENABLED=1
SetEnvIf X-Cache-Control "^need-cache$" CACHE_CONTROL_VALID=1

# Lua hooks for cache control
LuaHookTranslateName /etc/apache2/lua/cache_control.lua check_and_manage_cache
LuaHookLog /etc/apache2/lua/cache_control.lua handle_response

<VirtualHost *:443>
    ServerName localhost
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/apache2/certs/apache.crt
    SSLCertificateKeyFile /etc/apache2/certs/apache.key
    SSLProtocol TLSv1.2 TLSv1.3
    
    # HTTP/2 settings
    Protocols h2 http/1.1
    
    # Logging
    LogLevel debug
    CustomLog /var/log/apache2/access.log combined
    ErrorLog /var/log/apache2/error.log
    
    # Global headers
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header always set Access-Control-Allow-Headers "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Special-Key,X-Cache-Control,X-Admin-Request"
    Header always set Access-Control-Expose-Headers "X-Cache-Status,X-Cache-Hit,X-Cache-Deleted,X-Cache-Admin-View"
    
    # Allow both CL and TE headers for smuggling
    RequestHeader unset Transfer-Encoding early
    RequestHeader unset Content-Length early
    
    # Debug headers
    Header always set X-Cache-Status "%{cache-status}e"
    Header always set X-Cache-Enabled "%{CACHE_ENABLED}e"
    Header always set X-Cache-Control-Valid "%{CACHE_CONTROL_VALID}e"
    Header always set X-Is-Admin "%{IS_ADMIN}e"
    
    # Frontend with HTTP/2
    <LocationMatch "^/(?!api/).*">
        ProxyPass h2://frontend:3000/
        ProxyPassReverse h2://frontend:3000/
        RequestHeader set Protocol "HTTP/2"
        ProxyPreserveHost On
        
        # Enable caching
        CacheEnable disk
        
        # Don't validate responses
        Header unset ETag
        Header unset Last-Modified
        RequestHeader unset If-Modified-Since
        RequestHeader unset If-None-Match
        
        # Cache all methods
        CacheDefaultExpire 60
        CacheMaxExpire 600
    </LocationMatch>
    
    # Backend with HTTP/1.1
    <Location /api/>
        ProxyPass http://backend:5000/
        ProxyPassReverse http://backend:5000/
        RequestHeader set Protocol "HTTP/1.1"
        ProxyPreserveHost On
        
        # Enable caching
        CacheEnable disk
        
        # Don't validate responses
        Header unset ETag
        Header unset Last-Modified
        RequestHeader unset If-Modified-Since
        RequestHeader unset If-None-Match
        
        # Cache control
        CacheDefaultExpire 60
        CacheMaxExpire 600
    </Location>
    
    # Global cache settings for all locations
    <LocationMatch ".*">
        # Don't validate responses
        Header unset ETag
        Header unset Last-Modified
        
        # Cache headers
        Header merge Cache-Control "public"
        Header unset Pragma
        
        # No validation
        RequestHeader unset If-Modified-Since
        RequestHeader unset If-None-Match
        
        # Allow caching of error responses
        CacheStoreExpired on
        CacheStoreNoStore on
        CacheStorePrivate on
    </LocationMatch>
    
    # Special handling for admin bot
    <Location /visit>
        ProxyPass http://admin-bot:3000/visit
        ProxyPassReverse http://admin-bot:3000/visit
        
        # Ensure admin bot requests work
        ProxyPreserveHost On
        RequestHeader set Protocol "HTTP/1.1"
    </Location>
</VirtualHost>

# HTTP to HTTPS redirect
<VirtualHost *:80>
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
</VirtualHost>